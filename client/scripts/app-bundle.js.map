{"version":3,"sources":["src/app.js","src/authConfig.js","src/environment.js","src/main.js","src/admin/settings.js","src/gradebook/addStudent.js","src/gradebook/addSubject.js","src/gradebook/addYear.js","src/gradebook/index.js","src/home/index.js","src/reports/index.js","src/validation/bootstrap-form-renderer.js","src/validation/index.js","src/validation/rules.js","src/admin/components/password.js","src/admin/components/profile.js","src/gradebook/components/addAssignment.js","src/gradebook/components/assignmentlist.js","src/gradebook/components/quickEntry.js","src/gradebook/components/reportAssignment.js","src/gradebook/components/scoresList.js","src/gradebook/lib/autocomplete.js","src/gradebook/models/student.js","src/gradebook/models/subject.js","src/gradebook/models/year.js","src/home/signup/firstTime.js","src/home/signup/payment.js","src/reports/attributes/timePlot.js","src/reports/components/studentReport.js","src/reports/converters/scoreFilter.js","src/shared/components/navbar.js","src/shared/converters/dateFormat.js","src/shared/converters/scoreFormat.js","src/shared/models/user.js","src/shared/services/apiService.js","src/shared/services/currentService.js","src/shared/services/httpService.js","src/gradebook/models/assignment.js","src/gradebook/models/score.js"],"names":["App","configureRouter","config","router","title","addPipelineStep","map","route","moduleId","nav","auth","name","current","activate","reviveUser","isAuthenticated","token","getTokenPayload","identity","configForDevelopment","baseUrl","loginRedirect","configForProduction","window","location","hostname","debug","testing","configure","aurelia","use","standardConfiguration","feature","plugin","baseConfig","developmentLogging","start","then","setRoot","Settings","AddStudent","api","controllerFactory","newStudent","controller","createForCurrentScope","created","bttn","students","setStudentList","formStart","reset","query","filters","year","id","order_by","find","data","edit","student","delete","confirmed","confirm","fullName","submit","validate","result","valid","year_id","save","AddSubject","newSubject","setSubjectList","subject","AddYear","newYear","setYearList","years","catch","console","log","error","school","first_day","setYear","resp","GradeBook","eventaggregator","ea","quickEntry","editMode","addAssignment","clearAssignment","editAssignment","deleteAssignment","assignment","publish","toggleQuick","Home","newUser","submitSignUp","signup","setUser","user","navigateToRoute","reload","Reports","attached","reports","setReport","report","selectedReport","BootstrapFormRenderer","render","instruction","unrender","elements","element","remove","add","formGroup","closest","classList","message","document","createElement","className","textContent","appendChild","querySelector","removeChild","querySelectorAll","length","container","registerHandler","get","customRule","value","obj","undefined","isNaN","Date","parse","Password","http","params","password","resetPassword","send","feedback","changePassword","Profile","profile","isSaving","saved","AddAssignment","newAssignment","date","format","mode","btn","subject_id","setAssignment","cancel","AssignmentList","setAssignmentList","subsub","subscribe","detached","dispose","QuickEntry","suggestionService","suggest","Promise","resolve","toLowerCase","suggestions","notEntered","filter","x","first_name","indexOf","sort","getName","suggestion","entered","scores","isPoints","nameFocus","scoreFocus","pushScore","score","push","item","quickPoints","parseKey","key","updateScore","d3","ReportAssignment","makePlot","subscriber","select","renderHistogram","renderDonut","divElement","formatCount","margin","top","right","bottom","left","width","height","svg","append","attr","g","scaleLinear","range","max","domain","d","bins","histogram","y","div","style","bar","selectAll","enter","x0","on","transition","duration","html","join","event","pageX","pageY","x1","text","call","axisBottom","tickFormat","Math","round","nestdata","nest","rollup","entries","group","count","names","radius","min","tooltip","color","scaleOrdinal","schemeCategory10","slice","donutWidth","arc","innerRadius","outerRadius","pie","a","b","legendRectSize","legendSpacing","path","i","percent","legend","height2","offset","horz","vert","ScoresList","editScoreId","editScore","editFocus","deFocus","nextID","Autocomplete","Element","defaultBindingMode","twoWay","expanded","updatingInput","index","suggestionsUL","userInput","display","inputValue","service","collapse","notify","createCustomEvent","bubbles","autocomplete","dispatchEvent","valueChanged","inputValueChanged","splice","scroll","ul","li","children","offsetTop","offsetHeight","scrollTop","keydown","checks","quickNameFocus","quickScoreFocus","blur","suggestionClicked","focus","firstElementChild","Student","Object","assign","last_name","ensure","displayName","required","maxLength","Subject","Year","satisfiesRule","FirstTime","completed","todo","activeStep","nextStep","step","shift","setTimeout","navigate","PaymentSetup","TimePlotCustomAttribute","bind","timePlot","type","parseTime","timeParse","scaleTime","valueline","line","_movingSum","forEach","extent","timeFormat","ticks","axisLeft","StudentReport","selected","reportGenerated","objects","generate","end","scoreFilterValueConverter","toView","subjectid","NavBar","showReset","login","logout","toggleReset","sendReset","email","loginData","DateFormatValueConverter","ScoreFormatValueConverter","meta","User","minLength","ApiService","withBaseUrl","withHeader","getToken","withInterceptor","response","statusCode","parsed","JSON","source","requestMessage","url","split","modelMap","createRequest","asGet","withParams","q","stringify","findOne","model","asPut","withContent","asPost","asDelete","CurrentService","subjectList","userId","active_year","reviveYear","setSubject","assignmentList","setScores","assignId","yearId","HttpService","body","withToken","req","Assignment","Score"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\nimport {CurrentService} from 'shared/services/currentService';\nimport {AuthService, AuthorizeStep} from 'aurelia-auth';\n\n@inject(CurrentService, AuthService)\nexport class App {\n  configureRouter(config, router) {\n    config.title = 'Marks';\n    config.addPipelineStep('authorize', AuthorizeStep);\n    config.map([\n      // Main Nav routes\n      { route: '/', moduleId: './home/index', nav: 0, title: 'Welcome', auth: false },\n      { route: 'gradebook', moduleId: './gradebook/index', nav: 1, title: 'Gradebook', name: 'gradebook', auth: true},\n      { route: 'reports', moduleId: './reports/index', nav: 2, title: 'Reports', auth: true},\n\n      // User Managment\n      { route: 'settings', moduleId: './admin/settings', title: 'Settings', name: 'settings', auth: true},\n      { route: 'password/:token', moduleId: './admin/components/password', title: 'Reset Password'},\n\n      // Signup Routes\n      { route: 'payment', moduleId: './home/signup/payment', title: 'Setup Payment', name: 'payment', auth: true },\n      { route: 'first_time', moduleId: './home/signup/firstTime', title: 'Gradebook Setup', name: 'firsttime', auth: true },\n\n      // Add Routes\n      { route: 'gradebook/addsubject',  moduleId: './gradebook/addSubject', title: 'Add Subject', name: 'addsubject', auth: true},\n      { route: 'gradebook/addstudent',  moduleId: './gradebook/addStudent', title: 'Add Student', name: 'addstudent', auth: true},\n      { route: 'gradebook/addyear',  moduleId: './gradebook/addYear', title: 'Add Year', name: 'addyear', auth: true}\n\n    ]);\n\n    this.router = router;\n  }\n\n  constructor(current, auth) {\n    this.current = current;\n    this.auth = auth;\n  }\n\n  activate() {\n    this.reviveUser();\n  }\n\n  reviveUser() {\n    if (this.auth.isAuthenticated()) {\n      let token = this.auth.getTokenPayload();\n      this.current.reviveUser(token.identity);\n    }\n  }\n}\n","let configForDevelopment = {\n  baseUrl: 'http://localhost:5000/',\n  loginRedirect: '#/gradebook'\n};\n\nlet configForProduction = {\n};\n\nlet config;\nif (window.location.hostname === 'localhost') {\n  config = configForDevelopment;\n} else {\n  config = configForProduction;\n}\n\nexport default config;\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport config from './authConfig';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('validation')\n    .plugin('aurelia-auth', (baseConfig)=>{\n      baseConfig.configure(config);\n    });\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Settings {\n  constructor() {\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {ValidationControllerFactory} from 'aurelia-validation';\nimport {CurrentService} from 'shared/services/currentService';\nimport {ApiService} from 'shared/services/apiService';\nimport {Student} from 'gradebook/models/student';\n\n@inject(CurrentService, ApiService, ValidationControllerFactory)\nexport class AddStudent {\n  newStudent = new Student();\n\n  constructor(current, api, controllerFactory) {\n    this.current = current;\n    this.api = api;\n    this.controller = controllerFactory.createForCurrentScope();\n  }\n\n  created() {\n    this.title = 'Add Student';\n    this.bttn = 'Add Student';\n    this.students = [];\n\n    // Get students\n    this.setStudentList();\n    this.formStart = true;\n  }\n\n  reset() {\n    this.controller.reset();\n    this.newStudent = new Student();\n    this.title = 'Add Student';\n    this.bttn = 'Add Student';\n  }\n\n  setStudentList() {\n    let query = {\n      filters: [{'name': 'year_id', 'op': 'eq', 'val': this.current.year.id}],\n      order_by: [{'field': 'first_name', 'direction': 'asc'}]\n    };\n\n    this.api.find('students', query)\n            .then(data => this.students = data);\n  }\n\n  edit(student) {\n    this.newStudent = student;\n    this.controller.reset();\n    this.title = 'Edit Student';\n    this.bttn = 'Save Changes';\n  }\n\n  delete(student) {\n    let confirmed = confirm('Are you sure you want to delete ' + student.fullName + '?');\n\n    if (confirmed) {\n      this.api.delete(student)\n              .then(data => this.setStudentList());\n    }\n  }\n\n  submit() {\n    this.controller.validate().then(result => {\n      if (!result.valid) {\n        return;\n      }\n\n      // Reset Focus\n      this.formStart = true;\n\n      // Add year_id if missing\n      if (!this.newStudent.year_id) {\n        this.newStudent.year_id = this.current.year.id;\n      }\n\n      // Save Changes\n      this.api.save(this.newStudent).then(resp => {\n        // Refresh Student list\n        this.setStudentList();\n        // Reset Form\n        this.reset();\n      });\n    });\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {ValidationControllerFactory} from 'aurelia-validation';\nimport {CurrentService} from 'shared/services/currentService';\nimport {ApiService} from 'shared/services/apiService';\nimport {Subject} from 'gradebook/models/subject';\n\n@inject(CurrentService, ApiService, ValidationControllerFactory)\nexport class AddSubject {\n  newSubject = new Subject();\n\n  constructor(current, api, controllerFactory) {\n    this.current = current;\n    this.api = api;\n    this.controller = controllerFactory.createForCurrentScope();\n  }\n\n  created() {\n    this.title = 'Add Subject';\n    this.bttn = 'Add Subject';\n    this.current.setSubjectList();\n    this.formStart = true;\n  }\n\n  reset() {\n    this.title = 'Add Subject';\n    this.bttn = 'Add Subject';\n    this.formStart = true;\n    this.newSubject = new Subject();\n    this.controller.reset();\n  }\n\n  edit(subject) {\n    this.controller.reset();\n    this.newSubject = subject;\n    this.formStart = true;\n    this.title = 'Edit Subject';\n    this.bttn = 'Save Changes';\n  }\n\n  delete(subject) {\n    let confirmed = confirm('Are you sure you want to delete ' + subject.name  + '?');\n\n    if (confirmed) {\n      this.api.delete(subject).then(data => this.current.setSubjectList());\n    }\n  }\n\n  submit() {\n    this.controller.validate().then(result => {\n      if (!result.valid) {\n        return;\n      }\n\n      if (!this.newSubject.year_id) {\n        this.newSubject.year_id = this.current.year.id;\n      }\n\n      this.api.save(this.newSubject).then(data => {\n        this.current.setSubjectList();\n        this.reset();\n      });\n    });\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {ValidationControllerFactory} from 'aurelia-validation';\nimport {CurrentService} from 'shared/services/currentService';\nimport {ApiService} from 'shared/services/apiService';\nimport {Year} from 'gradebook/models/year';\n\n@inject(CurrentService, ApiService, ValidationControllerFactory)\nexport class AddYear {\n  newYear = new Year();\n\n  constructor(current, api, controllerFactory) {\n    this.current = current;\n    this.api = api;\n    this.controller = controllerFactory.createForCurrentScope();\n  }\n\n  created() {\n    this.title = 'Add Year';\n    this.bttn = 'Add Year';\n    this.setYearList();\n    this.formStart = true;\n  }\n\n  reset() {\n    this.controller.reset();\n    this.newYear = new Year();\n    this.formStart = true;\n    this.title = 'Add Year';\n    this.bttn = 'Add Year';\n  }\n\n  setYearList() {\n    let query = {\n      order_by: [{'field': 'first_day', 'direction': 'desc'}]\n    };\n\n    this.api.find('years', query)\n            .then(data => this.years = data)\n            .catch(error => console.log(error));\n  }\n\n  edit(year) {\n    this.newYear = year;\n    this.title = 'Edit Year';\n    this.bttn = 'Save Changes';\n  }\n\n  delete(year) {\n    let confirmed = confirm('Are you sure you want to delete ' + year.school + ' (' + year.first_day + ')' + '?');\n\n    if (confirmed) {\n      this.api.delete(year)\n              .then(data => this.setYearList())\n              .catch(error => console.log(error));\n    }\n  }\n\n  submit() {\n    // Check for validaiton\n    this.controller.validate().then(result => {\n      if (!result.valid) {\n        return;\n      }\n\n      // Save or Add\n      this.api.save(this.newYear)\n              .then(resp => {\n                if (!this.current.year || this.newYear.id === this.current.year.id) {\n                  this.current.setYear(resp);\n                }\n                this.setYearList();\n                this.reset();  // Refresh year list to get update\n              })\n              .catch(error => console.log(error));\n    });\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {CurrentService} from 'shared/services/currentService';\nimport {ApiService} from 'shared/services/apiService';\n\n@inject(CurrentService, ApiService, EventAggregator)\nexport class GradeBook {\n  constructor(current, api, eventaggregator) {\n    // Data Holders\n    this.current = current;\n    this.api = api;\n    this.ea = eventaggregator;\n\n    // Initalize Selection Indicators\n    this.quickEntry = false;\n    this.editMode = false;\n  }\n\n  created() {\n    if (this.current.year) {\n      this.current.setSubjectList();\n    }\n  }\n\n  addAssignment() {\n    // Flip on add assignment dialog\n    this.current.clearAssignment();\n    this.editMode = 'add';\n  }\n\n  editAssignment() {\n    this.editMode = 'edit';\n  }\n\n  deleteAssignment() {\n    // Confirm with User\n    let confirmed = confirm('Are you sure you want to delete ' + this.current.assignment.name + '?');\n\n    if (confirmed) {\n      this.api.delete(this.current.assignment)\n              .then(data => this.ea.publish('reloadAssignments'));\n\n      this.current.clearAssignment();\n    }\n  }\n\n  toggleQuick() {\n    this.quickEntry = !this.quickEntry;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {AuthService} from 'aurelia-auth';\nimport {ValidationControllerFactory} from 'aurelia-validation';\nimport {CurrentService} from 'shared/services/currentService';\nimport {User} from 'shared/models/user';\n\n@inject(Router, AuthService, CurrentService, ValidationControllerFactory)\nexport class Home {\n  newUser = new User();\n\n  constructor(router, auth, current, controllerFactory) {\n    this.router = router;\n    this.auth = auth;\n    this.current = current;\n    this.controller = controllerFactory.createForCurrentScope();\n  }\n\n  submitSignUp() {\n    // Check for Validation\n    this.controller.validate().then(result => {\n      if (!result.valid) {\n        return;\n      }\n      // Send form\n      this.auth.signup(this.newUser)\n               .then(resp => {\n                 // Set as current user\n                 this.current.setUser(new User(resp.user));\n\n                 // Move on to next step\n                 this.router.navigateToRoute('payment');\n                 location.reload();\n               });\n    });\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {CurrentService} from '../shared/services/currentService';\nimport {ApiService} from '../shared/services/apiService';\n\n@inject(CurrentService, ApiService)\nexport class Reports {\n  constructor(current, api) {\n    this.current = current;\n    this.api = api;\n  }\n\n  attached() {\n    this.reports = ['Student'];\n  }\n\n  setReport(report) {\n    this.selectedReport = report;\n  }\n}\n","import {\n  ValidationRenderer,\n  RenderInstruction,\n  ValidateResult\n} from 'aurelia-validation';\n\nexport class BootstrapFormRenderer {\n  render(instruction: RenderInstruction) {\n    for (let { result, elements } of instruction.unrender) {\n      for (let element of elements) {\n        this.remove(element, result);\n      }\n    }\n\n    for (let { result, elements } of instruction.render) {\n      for (let element of elements) {\n        this.add(element, result);\n      }\n    }\n  }\n\n  add(element: Element, result: ValidateResult) {\n    if (result.valid) {\n      return;\n    }\n\n    const formGroup = element.closest('.form-group');\n    if (!formGroup) {\n      return;\n    }\n\n    // add the has-error class to the enclosing form-group div\n    formGroup.classList.add('has-error');\n\n    // add help-block\n    const message = document.createElement('span');\n    message.className = 'help-block validation-message';\n    message.textContent = result.message;\n    message.id = `validation-message-${result.id}`;\n    formGroup.appendChild(message);\n  }\n\n  remove(element: Element, result: ValidateResult) {\n    if (result.valid) {\n      return;\n    }\n\n    const formGroup = element.closest('.form-group');\n    if (!formGroup) {\n      return;\n    }\n\n    // remove help-block\n    const message = formGroup.querySelector(`#validation-message-${result.id}`);\n    if (message) {\n      formGroup.removeChild(message);\n\n      // remove the has-error class from the enclosing form-group div\n      if (formGroup.querySelectorAll('.help-block.validation-message').length === 0) {\n        formGroup.classList.remove('has-error');\n      }\n    }\n  }\n}\n","import './rules';\nimport {BootstrapFormRenderer} from './bootstrap-form-renderer';\n\nexport function configure(config) {\n  config.plugin('aurelia-validation');\n\n  config.container.registerHandler('bootstrap-form', container => container.get(BootstrapFormRenderer));\n}\n","import {ValidationRules} from 'aurelia-validation';\n\nValidationRules.customRule(\n  'date',\n  (value, obj) => value === null || value === undefined || value === '' || !isNaN(Date.parse(value)),\n  '${$displayName} must be a valid date.'\n);\n","import {inject} from 'aurelia-framework';\nimport {HttpService} from 'shared/services/httpService';\n\n@inject(HttpService)\nexport class Password {\n  constructor(http) {\n    this.http = http;\n  }\n\n  activate(params) {\n    if (params.token !== undefined) {\n      this.token = params.token;\n      this.reset = true;\n    } else {\n      this.reset = false;\n    }\n  }\n\n  attached() {\n    this.password = {};\n  }\n\n  resetPassword() {\n    // Add token\n    this.password.token = this.token;\n\n    // Send Reset\n    this.http.send('auth/reset_password', this.password)\n             .then(resp => {\n               if (resp.error) {\n                 this.feedback = 'Error: ' + resp.error;\n               } else {\n                 this.feedback = 'Password Changed!';\n               }\n             });\n  }\n\n  changePassword() {\n    this.http.send('auth/change_password', this.password, true)\n             .then(resp => this.feedback = resp.message);\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {ValidationControllerFactory} from 'aurelia-validation';\nimport {ApiService} from 'shared/services/apiService';\nimport {CurrentService} from 'shared/services/currentService';\n\n@inject(CurrentService, ApiService, ValidationControllerFactory)\nexport class Profile {\n  constructor(current, api, controllerFactory) {\n    this.current = current;\n    this.api = api;\n    this.controller = controllerFactory.createForCurrentScope();\n  }\n\n  attached() {\n    this.profile = this.current.user;\n  }\n\n  submit() {\n    this.controller.validate().then(result => {\n      if (!result.valid) {\n        return;\n      }\n      this.isSaving = true;\n      this.api.save(this.profile).then(data => {\n        this.isSaving = false;\n        this.saved = true;\n      });\n    });\n  }\n}\n","import {inject, bindable} from 'aurelia-framework';\nimport {ValidationControllerFactory} from 'aurelia-validation';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {CurrentService} from 'shared/services/currentService';\nimport {ApiService} from 'shared/services/apiService';\nimport {Assignment} from 'gradebook/models/assignment';\nimport moment from 'moment';\n\n@inject(ApiService, CurrentService, EventAggregator, ValidationControllerFactory)\nexport class AddAssignment {\n  @bindable mode;\n  newAssignment = new Assignment({date: moment().format('YYYY-MM-DD')});\n\n  constructor(api, current, eventaggregator, controllerFactory) {\n    this.api = api;\n    this.current = current;\n    this.ea = eventaggregator;\n    this.controller = controllerFactory.createForCurrentScope();\n  }\n\n  attached() {\n    if (this.mode === 'edit') {\n      this.newAssignment = this.current.assignment;\n      this.title = 'Edit Assignment';\n      this.btn = 'Save Changes';\n    } else {\n      this.title = 'Add Assignment';\n      this.btn = this.title;\n    }\n  }\n\n  submit() {\n    this.controller.validate().then(result => {\n      if (!result.valid) {\n        return;\n      }\n\n      if (!this.newAssignment.subject_id) {\n        this.newAssignment.subject_id = this.current.subject.id;\n      }\n\n      this.api.save(this.newAssignment)\n              .then(data => {\n                this.ea.publish('reloadAssignments');\n                this.current.setAssignment(data);\n                this.mode = false;\n              });\n    });\n  }\n\n  cancel() {\n    this.mode = false;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {CurrentService} from 'shared/services/currentService';\n\n@inject(CurrentService, EventAggregator)\nexport class AssignmentList {\n  constructor(current, eventaggregator) {\n    // Injects\n    this.current = current;\n    this.ea = eventaggregator;\n  }\n\n  attached() {\n    // Populate List\n    this.current.setAssignmentList();\n\n    // Set up Subscriptions\n    this.subsub = this.ea.subscribe('subjectSet', resp => this.current.setAssignmentList());\n    this.reload = this.ea.subscribe('reloadAssignments', resp => this.current.setAssignmentList());\n  }\n\n  detached() {\n    this.subsub.dispose();\n    this.reload.dispose();\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {CurrentService} from '../../shared/services/currentService';\nimport {ApiService} from '../../shared/services/apiService';\n\n@inject(ApiService, CurrentService, EventAggregator)\nexport class QuickEntry {\n\n  constructor(api, current, eventaggregator) {\n    // Initalize http client\n    this.api = api;\n    this.current = current;\n    this.ea = eventaggregator;\n  }\n\n  attached() {\n    // Initalize variables\n    this.entered = [];\n    this.notEntered = this.current.scores;\n\n    // Set Flags\n    this.isPoints = this.current.assignment.isPoints;\n    this.nameFocus = true;\n    this.scoreFocus = false;\n  }\n\n  detached() {\n    this.entered = [];\n    this.notEntered = [];\n  }\n\n  // Provides autocomplete Suggestions\n  suggestionService = {\n    suggest: value => {\n      // Check if there is any input\n      if (value === '') {\n        return Promise.resolve([]);\n      }\n      value = value.toLowerCase();\n      const suggestions = this.notEntered\n        .filter(x => x.student.first_name.toLowerCase().indexOf(value) === 0)\n        .sort();\n      return Promise.resolve(suggestions);\n    },\n\n    getName: suggestion => suggestion.student.first_name\n  };\n\n  pushScore(score) {\n    // Add to the entered list\n    this.entered.push(score);\n\n    // Remove Score from future suggestions\n    this.notEntered = this.notEntered.filter(item => item.id !== score.id);\n\n    // clear forms and reset focus\n    this.score = null;\n    this.quickPoints = null;\n    this.scoreFocus = false;\n    this.nameFocus = true;\n  }\n\n  parseKey(key) {\n    if (key === 13) {\n      // If Checks type\n      if (!this.isPoints && key === 13) {\n        this.score.value = 1;\n        this.updateScore(this.score);\n        this.pushScore(this.score);\n      }\n\n      // If Points type\n      if (this.quickPoints) {\n        this.score.value = this.quickPoints;\n        this.updateScore(this.score);\n        this.pushScore(this.score);\n      }\n    } else {\n      return true;\n    }\n  }\n\n  updateScore(score) {\n    // Update Scores\n    this.api.save(score);\n\n    // Tell the app a score has been updated\n    this.ea.publish('scoreUpdate');\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {CurrentService} from 'shared/services/currentService';\nimport * as d3 from 'd3';\n\n@inject(CurrentService, EventAggregator)\nexport class ReportAssignment {\n  constructor(current, eventaggregator) {\n    // Initalize http client\n    this.current = current;\n    this.ea = eventaggregator;\n  }\n\n  attached() {\n    this.makePlot();\n    this.subscriber = this.ea.subscribe('scoreUpdate', resp => this.makePlot());\n  }\n\n  detached() {\n    this.subscriber.dispose();\n  }\n\n  makePlot() {\n    // Remove Any Current Plots\n    d3.select('svg').remove();\n\n    // Render proper Plot\n    if (this.current.assignment.isPoints) {\n      this.renderHistogram(this.current.scores, '#content');\n    } else {\n      this.renderDonut(this.current.scores, '#content');\n    }\n  }\n\n  renderHistogram(data, divElement) {\n    let formatCount = d3.format(',.0f');\n\n    // Height and width\n    let margin = {top: 20, right: 20, bottom: 30, left: 50};\n    let width = 500 - margin.left - margin.right;\n    let height = 300 - margin.top - margin.bottom;\n\n    // Define Plot\n    let svg = d3.select(divElement)\n                .append('svg')\n                .attr('width', width + margin.left + margin.right)\n                .attr('height', height + margin.top + margin.bottom);\n\n    let g = svg.append('g')\n                .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n    let x = d3.scaleLinear()\n              .range([0, width]);\n\n    if (this.current.assignment.max !== 0) {\n      x.domain([0, this.current.assignment.max]);\n    } else {\n      x.domain([0, d3.max(data, (d) => d.value)]);\n    }\n\n    let bins = d3.histogram()\n                 .value((d) => d.value)\n                 .domain(x.domain())(data);\n\n    let y = d3.scaleLinear()\n              .domain([0, d3.max(bins, (d) => d.length)])\n              .range([height, 0]);\n\n    let div = d3.select('body')\n                .append('div')\n                .attr('class', 'tooltip')\n                .style('opacity', 0);\n\n\n    let bar = g.selectAll('.bar')\n               .data(bins)\n               .enter()\n               .append('g')\n               .attr('class', 'bar')\n               .attr('transform', (d) => 'translate(' + x(d.x0) + ',' + y(d.length) + ')')\n               .on('mouseover', (d) => {\n                 div.transition()\n                    .duration(200)\n                    .style('opacity', 0.9);\n\n                 div.html(d.map(item => item.student.first_name + ': ' + item.value + '<br>').join(''))\n                    .style('left', (d3.event.pageX) + 'px')\n                    .style('top', (d3.event.pageY - 28) + 'px');\n               })\n               .on('mouseout', function(d) {\n                 div.transition()\n                    .duration(500)\n                    .style('opacity', 0);\n               });\n\n    bar.append('rect')\n        .attr('x', 1)\n        .attr('width', x(bins[0].x1) - x(bins[0].x0) - 1)\n        .attr('height', (d) => height - y(d.length));\n\n    bar.append('text')\n        .attr('dy', '.75em')\n        .attr('y', 6)\n        .attr('x', (x(bins[0].x1) - x(bins[0].x0)) / 2)\n        .attr('text-anchor', 'middle')\n        .text((d) => formatCount(d.length));\n\n    if (this.current.assignment.max !== 0) {\n      g.append('g')\n          .attr('class', 'axis axis--x')\n          .attr('transform', 'translate(0,' + height + ')')\n          .call(d3.axisBottom(x)\n              .tickFormat((d) => Math.round((d / this.current.assignment.max) * 100) + '%'));\n    } else {\n      g.append('g')\n          .attr('class', 'axis axis--x')\n          .attr('transform', 'translate(0,' + height + ')')\n          .call(d3.axisBottom(x));\n    }\n  }\n\n  renderDonut(data, divElement) {\n    // Set Up Data\n    let nestdata = d3.nest()\n                     .key((d) => d.value)\n                     .rollup((g) => {\n                       return {'count': g.length,\n                               'names': g.map(item => item.student.first_name)\n                             };\n                     })\n                     .entries(data)\n                     .map(group => {\n                       return {\n                         'group': group.key === '1' ? 'Checked' : 'Missing',\n                         'count': group.value.count,\n                         'names': group.value.names\n                       };\n                     });\n\n    // Dimensions\n    let width = 500;\n    let height = 300;\n    let radius = Math.min(width, height) / 2;\n\n    // Set up Tool tip\n    let tooltip = d3.select(divElement)\n                    .append('div')\n                    .attr('class', 'tooltip2');\n\n    tooltip.append('div').attr('class', 'label');\n    tooltip.append('div').attr('class', 'count');\n    tooltip.append('div').attr('class', 'students');\n    tooltip.append('div').attr('class', 'percent');\n\n    // Color Scale\n    let color = d3.scaleOrdinal(d3.schemeCategory10.slice(2, 4));\n    if (nestdata.length === 1 && nestdata[0].group === 'Missing') {\n      color = d3.scaleOrdinal(d3.schemeCategory10.slice(3, 4));\n    }\n\n    let svg = d3.select(divElement)\n                .append('svg')\n                .attr('width', width)\n                .attr('height', height)\n                .append('g')\n                .attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')');\n\n    let donutWidth = 50;\n\n    let arc = d3.arc()\n                .innerRadius(radius - donutWidth)\n                .outerRadius(radius);\n\n    let pie = d3.pie()\n                .value(function(d) { return d.count; })\n                .sort((a, b) => a - b);\n\n    let legendRectSize = 18;\n    let legendSpacing = 4;\n\n    let path = svg.selectAll('path')\n                  .data(pie(nestdata))\n                  .enter()\n                  .append('path')\n                  .attr('d', arc)\n                  .attr('fill', function(d, i) {\n                    return color(d.data.group);\n                  });\n\n    path.on('mouseover', function(d) {\n      let percent = Math.round(1000 * d.data.count / data.length) / 10;\n      tooltip.select('.label').html(d.data.group);\n      tooltip.select('.count').html(d.data.count);\n      tooltip.select('.students').html(d.data.names.map(name => name + '<br>').join(''));\n      tooltip.select('.percent').html(percent + '%');\n      tooltip.style('display', 'block');\n    });\n\n    path.on('mouseout', function() {\n      tooltip.style('display', 'none');\n    });\n\n    let legend = svg.selectAll('.legend')\n                    .data(color.domain())\n                    .enter()\n                    .append('g')\n                    .attr('class', 'legend')\n                    .attr('transform', function(d, i) {\n                      let height2 = legendRectSize + legendSpacing;\n                      let offset =  height2 * color.domain().length / 2;\n                      let horz = -2 * legendRectSize;\n                      let vert = i * height2 - offset;\n                      return 'translate(' + horz + ',' + vert + ')';\n                    });\n\n    legend.append('rect')\n          .attr('width', legendRectSize)\n          .attr('height', legendRectSize)\n          .style('fill', color)\n          .style('stroke', color);\n\n    legend.append('text')\n          .attr('x', legendRectSize + legendSpacing)\n          .attr('y', legendRectSize - legendSpacing)\n          .text(function(d, i) { return d; });\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {ValidationControllerFactory} from 'aurelia-validation';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {CurrentService} from '../../shared/services/currentService';\nimport {ApiService} from '../../shared/services/apiService';\n\n@inject(ApiService, CurrentService, EventAggregator, ValidationControllerFactory)\nexport class ScoresList {\n  constructor(api, current, eventaggregator, controllerFactory) {\n    // Initalize http client\n    this.api = api;\n    this.ea = eventaggregator;\n    this.current = current;\n    this.controller = controllerFactory.createForCurrentScope();\n\n    // Initalize variables\n    this.editScoreId = null;\n  }\n\n  editScore(score) {\n    if (this.current.assignment.isPoints) {\n      this.editScoreId = score.id;\n      this.editFocus = true;\n    } else {\n      score.value = 1 - score.value;\n      this.updateScore(score);\n    }\n  }\n\n  deFocus(key) {\n    if (key === 13) {\n      this.editFocus = false;\n    } else {\n      return true;\n    }\n  }\n\n  updateScore(score) {\n    this.controller.validate().then(result => {\n      if (!result.valid) {\n        return;\n      }\n\n      // Update Scores\n      this.api.save(score).then(resp => {\n        // Update Current Scores\n        this.ea.publish('scoreUpdate');\n        // Reset edit\n        this.editScoreId = null;\n      });\n    });\n  }\n}\n","import {bindingMode, observable} from 'aurelia-binding';\nimport {bindable} from 'aurelia-templating';\nimport {inject} from 'aurelia-dependency-injection';\nimport {DOM} from 'aurelia-pal';\n\nlet nextID = 0;\n\n@inject(Element)\nexport class Autocomplete {\n  @bindable service;\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) value;\n  @bindable placeholder = '';\n  @bindable delay = 300;\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) nameFocus;\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) scoreFocus;\n  @bindable isPoints;\n  @bindable checks;\n  id = nextID++;\n  expanded = false;\n  @observable inputValue = '';\n  updatingInput = false;\n  suggestions = [];\n  index = -1;\n  suggestionsUL = null;\n  userInput = '';\n\n  constructor(element) {\n    this.element = element;\n  }\n\n  display(name) {\n    this.updatingInput = true;\n    this.inputValue = name;\n    this.updatingInput = false;\n  }\n\n  getName(suggestion) {\n    if (suggestion == null) {\n      return '';\n    }\n    return this.service.getName(suggestion);\n  }\n\n  collapse() {\n    this.expanded = false;\n    this.index = -1;\n  }\n\n  select(suggestion, notify) {\n    this.value = suggestion;\n    const name = this.getName(this.value);\n    this.userInput = name;\n    this.display(name);\n    this.collapse();\n    if (notify) {\n      const event = DOM.createCustomEvent('change', { bubbles: true });\n      event.value = suggestion;\n      event.autocomplete = this;\n      this.element.dispatchEvent(event);\n    }\n  }\n\n  valueChanged() {\n    this.select(this.value, false);\n  }\n\n  inputValueChanged(value) {\n    if (this.updatingInput) {\n      return;\n    }\n    this.userInput = value;\n    if (value === '') {\n      this.value = null;\n      this.collapse();\n      return;\n    }\n    this.service.suggest(value)\n      .then(suggestions => {\n        this.index = -1;\n        this.suggestions.splice(0, this.suggestions.length, ...suggestions);\n        if (suggestions.length === 1 && suggestions[0].student.first_name !== this.value) {\n          this.select(suggestions[0], true);\n        } else if (suggestions.length === 0) {\n          this.collapse();\n        } else {\n          this.expanded = true;\n        }\n      });\n  }\n\n  scroll() {\n    const ul = this.suggestionsUL;\n    const li = ul.children.item(this.index === -1 ? 0 : this.index);\n    if (li.offsetTop + li.offsetHeight > ul.offsetHeight) {\n      ul.scrollTop += li.offsetHeight;\n    } else if (li.offsetTop < ul.scrollTop) {\n      ul.scrollTop = li.offsetTop;\n    }\n  }\n\n  keydown(key) {\n    if (!this.expanded) {\n      if (key === 13) {\n        if (this.isPoints) {\n          this.nameFocus = false;\n          this.scoreFocus = true;\n        } else {\n          this.checks({key: key});\n        }\n      }\n      return true;\n    }\n\n    // down\n    if (key === 40) {\n      if (this.index < this.suggestions.length - 1) {\n        this.index++;\n        this.display(this.getName(this.suggestions[this.index]));\n      } else {\n        this.index = -1;\n        this.display(this.userInput);\n      }\n      this.scroll();\n      return;\n    }\n\n    // up\n    if (key === 38) {\n      if (this.index === -1) {\n        this.index = this.suggestions.length - 1;\n        this.display(this.getName(this.suggestions[this.index]));\n      } else if (this.index > 0) {\n        this.index--;\n        this.display(this.getName(this.suggestions[this.index]));\n      } else {\n        this.index = -1;\n        this.display(this.userInput);\n      }\n      this.scroll();\n      return;\n    }\n\n    // escape\n    if (key === 27) {\n      this.display(this.userInput);\n      this.collapse();\n      return;\n    }\n\n    // enter\n    if (key === 13) {\n      if (this.index >= 0) {\n        this.select(this.suggestions[this.index], true);\n      }\n      this.quickNameFocus = false;\n      this.quickScoreFocus = true;\n      return;\n    }\n\n    return true;\n  }\n\n  blur() {\n    this.select(this.value, false);\n    this.element.dispatchEvent(DOM.createCustomEvent('blur'));\n  }\n\n  suggestionClicked(suggestion) {\n    this.select(suggestion, true);\n  }\n\n  focus() {\n    this.element.firstElementChild.focus();\n  }\n}\n\n// aria-activedescendant\n// https://webaccessibility.withgoogle.com/unit?unit=6&lesson=13\n// https://www.w3.org/TR/wai-aria/states_and_properties#aria-autocomplete\n// https://www.w3.org/TR/wai-aria/roles#combobox\n","import {ValidationRules} from 'aurelia-validation';\n\nexport class Student {\n  constructor(data) {\n    Object.assign(this, data);\n  }\n\n  get source() {return 'students';}\n\n  get fullName() {return this.first_name + ' ' + this.last_name;}\n}\n\nValidationRules\n  .ensure('first_name').displayName('First Name')\n    .required()\n    .maxLength(255)\n  .ensure('last_name').displayName('Last Name')\n    .required()\n    .maxLength(255)\n  .on(Student);\n","import {ValidationRules} from 'aurelia-validation';\n\nexport class Subject {\n  constructor(data) {\n    Object.assign(this, data);\n  }\n\n  get source() {return 'subjects';}\n}\n\nValidationRules\n  .ensure('name').displayName('Name')\n    .required()\n    .maxLength(255)\n  .on(Subject);\n","import {ValidationRules} from 'aurelia-validation';\n\nexport class Year {\n  constructor(data) {\n    Object.assign(this, data);\n  }\n\n  get source() {return 'years';}\n}\n\nValidationRules\n  .ensure('school').displayName('School Name')\n    .required()\n    .maxLength(255)\n  .ensure('first_day').displayName('First Day')\n    .required()\n    .satisfiesRule('date')\n  .ensure('last_day').displayName('Last Day')\n    .required()\n    .satisfiesRule('date')\n  .on(Year);\n","import {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\n\n@inject(Router)\nexport class FirstTime {\n  constructor(router) {\n    this.router = router;\n  }\n\n  created() {\n    this.completed = [];\n    this.todo = ['Introduction', 'Profile', 'Years', 'Students', 'Subjects'];\n\n    this.activeStep = 'Introduction';\n  }\n\n  nextStep(step) {\n    if (step !== this.activeStep) {\n      return;\n    }\n\n    this.completed.push(this.todo.shift());\n    this.activeStep = this.todo[0];\n\n    if (this.todo.length === 0) {\n      setTimeout(() => {\n        this.router.navigate('gradebook');\n      }, 800);\n    }\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {ApiService} from 'shared/services/apiService';\n\n@inject(ApiService)\nexport class PaymentSetup {\n  constructor(api) {\n    this.api = api;\n  }\n}\n","import {bindable, inject} from 'aurelia-framework';\nimport * as d3 from 'd3';\n\n@inject(Element)\nexport class TimePlotCustomAttribute {\n  @bindable scores;\n  @bindable type;\n\n  constructor(element) {\n    this.element = element;\n  }\n\n  bind() {\n    this.timePlot(this.scores, this.type);\n  }\n\n  timePlot(data, type) {\n    // set the dimensions and margins of the graph\n    let margin = {top: 20, right: 20, bottom: 50, left: 50};\n    let width = 320 - margin.left - margin.right;\n    let height = 200 - margin.top - margin.bottom;\n\n    // parse the date / time\n    let parseTime = d3.timeParse('%Y-%m-%d');\n\n    // set the ranges\n    let x = d3.scaleTime().range([0, width]);\n    let y = d3.scaleLinear().range([height, 0]);\n\n    // define the line\n    let valueline = d3.line().x(d => x(d.assignment.date));\n\n    if (type === 'Points') {\n      valueline = valueline.y(d => y(Math.round((d.value / d.assignment.max) * 100)));\n    } else if (type === 'Checks') {\n      let _movingSum = 0;\n      valueline = valueline.y((d, i) => {\n        _movingSum += d.value;\n        return y(_movingSum / (i + 1));\n      });\n    }\n\n    // append the svg obgect\n    let svg = d3.select(this.element)\n                .append('svg')\n                .attr('width', width + margin.left + margin.right)\n                .attr('height', height + margin.top + margin.bottom)\n                .append('g')\n                .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n    // Format the data\n    data = data.filter(d => d.assignment.type === type);\n    data.forEach(d => d.assignment.date = parseTime(d.assignment.date));\n\n    // Scale the range of the data\n    x.domain(d3.extent(data, d => d.assignment.date));\n    if (type === 'Points') {\n      y.domain([0, 100]);\n    } else {\n      y.domain([0, 1]);\n    }\n\n    // Add the valueline path.\n    svg.append('path')\n        .data([data])\n        .attr('class', 'line')\n        .attr('d', valueline);\n\n    // Add the X Axis\n    svg.append('g')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(d3.axisBottom(x).tickFormat(d3.timeFormat('%m/%d')).ticks(data.length));\n\n    // Add the Y Axis\n    svg.append('g')\n       .call(d3.axisLeft(y));\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {CurrentService} from '../../shared/services/currentService';\nimport {ApiService} from '../../shared/services/apiService';\n\nimport moment from 'moment';\n\n@inject(CurrentService, ApiService)\nexport class StudentReport {\n  constructor(current, api) {\n    this.current = current;\n    this.api = api;\n  }\n\n  attached() {\n    this.setStudentList();\n    this.selected = {'start': this.current.year.first_day, 'end': moment().format('YYYY-MM-DD')};\n    this.reportGenerated = false;\n  }\n\n  setStudentList() {\n    let query = {\n      filters: [{'name': 'year_id', 'op': 'eq', 'val': this.current.year.id}],\n      order_by: [{'field': 'first_name', 'direction': 'asc'}]\n    };\n\n    this.api.find('students', query)\n            .then(data => this.students = data.objects);\n  }\n\n  generate() {\n    this.reportGenerated = false;\n\n    let query = {\n      filters: [{'name': 'student_id', 'op': 'eq', 'val': this.selected.student.id},\n                {'name': 'assignment', 'op': 'has', 'val': {\n                  'name': 'date', 'op': 'ge', 'val': this.selected.start}},\n                  {'name': 'assignment', 'op': 'has', 'val': {\n                    'name': 'date', 'op': 'le', 'val': this.selected.end}}],\n      order_by: [{'field': 'assignment__date', 'direction': 'asc'}]\n    };\n\n    // Get data\n    this.api.find('scores', query)\n            .then(data => {\n              this.scores = data.objects;\n              this.reportGenerated = true;\n            });\n  }\n}\n","export class scoreFilterValueConverter {\n  toView(scores, subjectid) {\n    return scores.filter(score => score.assignment.subject_id === subjectid);\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {ValidationControllerFactory} from 'aurelia-validation';\nimport {AuthService} from 'aurelia-auth';\nimport {CurrentService} from 'shared/services/currentService';\nimport {HttpService} from 'shared/services/httpService';\nimport {User} from 'shared/models/user';\n\n@inject(CurrentService, AuthService, Router, HttpService,\n        ValidationControllerFactory)\nexport class NavBar {\n  user = new User();\n\n  constructor(current, auth, router, http, controllerFactory) {\n    this.current = current;\n    this.auth = auth;\n    this.router = router;\n    this.http = http;\n    this.controller = controllerFactory.createForCurrentScope();\n  }\n\n  attached() {\n    this.showReset = false;\n  }\n\n  login() {\n    this.auth.login(this.user).then(resp => location.reload());\n  }\n\n  logout() {\n    this.auth.logout().then(location.reload());\n  }\n\n  toggleReset() {\n    this.showReset = true;\n  }\n\n  sendReset() {\n    this.http.send('auth/forgot_password', {email: this.loginData.email});\n  }\n}\n","import moment from 'moment';\n\nexport class DateFormatValueConverter {\n  toView(value, format) {\n    return moment(value).format(format);\n  }\n}\n","export class ScoreFormatValueConverter {\n  toView(score, meta) {\n    if (meta.type === 'Checks') {\n      return this.checks(score);\n    } else if (meta.type === 'Points' & meta.max !== 0) {\n      return this.percent(score, meta);\n    }\n\n    return score;\n  }\n\n  checks(score) {\n    if (score === 1) {\n      return '<i class=\"fa fa-check-circle-o fa-2x\" aria-hidden=\"true\"></i>';\n    }\n\n    return '<i class=\"fa fa-circle-o fa-2x\" aria-hidden=\"true\"></i>';\n  }\n\n  percent(score, meta) {\n    return `${Math.round((score / meta.max) * 100)}%`;\n  }\n}\n","import {ValidationRules} from 'aurelia-validation';\n\nexport class User {\n  constructor(data) {\n    Object.assign(this, data);\n  }\n\n  get source() {return 'users';}\n\n  get teacherName() {\n    if (this.title && this.last_name) {\n      return this.title + ' ' + this.last_name;\n    }\n  }\n}\n\nValidationRules\n  .ensure('email')\n    .required()\n    .email()\n  .ensure('password')\n    .required()\n    .minLength(8)\n    .maxLength(50)\n  .ensure('first_name').displayName('First Name')\n    .maxLength(255)\n  .ensure('last_name').displayName('Last Name')\n    .required()\n    .maxLength(255)\n  .ensure('title')\n    .required()\n  .on(User);\n","import {HttpClient} from 'aurelia-http-client';\nimport {inject} from 'aurelia-framework';\nimport {AuthService} from 'aurelia-auth';\nimport {User} from 'shared/models/user';\nimport {Year} from 'gradebook/models/year';\nimport {Student} from 'gradebook/models/student';\nimport {Subject} from 'gradebook/models/subject';\nimport {Assignment} from 'gradebook/models/assignment';\nimport {Score} from 'gradebook/models/score';\n\n@inject(HttpClient, AuthService)\nexport class ApiService {\n  constructor(http, auth) {\n    // Configure client\n    http.configure(config => {\n      config\n        .withBaseUrl('http://localhost:5000/api/')\n        .withHeader('Authorization', 'Bearer ' + auth.auth.getToken())\n        .withInterceptor({\n          // Parse every response to objects\n          response(message) {\n            // Check if this is a delete response\n            if (message.statusCode === 204) {\n              return message;\n            }\n\n            // Parse response and api source\n            let parsed = JSON.parse(message.response);\n            let source = message.requestMessage.url.split('/')[0];\n\n            // If list, convert each object to model\n            if (parsed.objects) {\n              parsed.objects = parsed.objects.map(item => new modelMap[source](item));\n              return parsed;\n            }\n            return new modelMap[source](parsed);\n          }\n        });\n    });\n\n    // Set\n    this.http = http;\n  }\n\n  find(source, query) {\n    return this.http.createRequest(source)\n                    .asGet()\n                    .withParams({q: JSON.stringify(query)})\n                    .send();\n  }\n\n  findOne(source, id) {\n    return this.http.createRequest(source + '/' + id)\n                    .asGet()\n                    .send();\n  }\n\n  save(model) {\n    if (model.id) {\n      return this.http.createRequest(model.source + '/' + model.id)\n                      .asPut()\n                      .withContent(model)\n                      .send();\n    }\n\n    return this.http.createRequest(model.source)\n                    .asPost()\n                    .withContent(model)\n                    .send();\n  }\n\n  delete(model) {\n    return this.http.createRequest(model.source + '/' + model.id)\n                    .asDelete()\n                    .send();\n  }\n}\n\n// Map for model creation\nconst modelMap = {'users': User,\n                  'years': Year,\n                  'students': Student,\n                  'subjects': Subject,\n                  'assignments': Assignment,\n                  'scores': Score};\n","import {EventAggregator} from 'aurelia-event-aggregator';\nimport {ApiService} from './apiService';\nimport {inject} from 'aurelia-framework';\n\n@inject(ApiService, EventAggregator)\nexport class CurrentService {\n  constructor(api, eventaggregator) {\n    // Injects\n    this.api = api;\n    this.ea = eventaggregator;\n\n    this.subjectList = [];\n  }\n\n  // User methods\n  setUser(user) {\n    this.user = user;\n  }\n\n  reviveUser(userId) {\n    this.api.findOne('users', userId)\n            .then(data => {\n              this.user = data;\n              if (this.user.active_year) {\n                this.reviveYear(this.user.active_year);\n              }\n            });\n  }\n\n  // Subject Methods\n  setSubjectList() {\n    // Define Query\n    let query = {\n      filters: [{'name': 'year_id', 'op': 'eq', 'val': this.year.id}]\n    };\n\n    this.api.find('subjects', query)\n            .then(data => this.subjectList = data.objects);\n  }\n\n  setSubject(subject) {\n    this.subject = subject;\n    this.clearAssignment();\n    this.ea.publish('subjectSet');\n  }\n\n  // Assignment Methods\n  setAssignmentList() {\n    // Define Query\n    let query = {\n      filters: [{'name': 'subject_id', 'op': 'eq', 'val': this.subject.id}],\n      order_by: [{'field': 'date', 'direction': 'desc'}]\n    };\n\n    // Request\n    this.api.find('assignments', query)\n            .then(data => this.assignmentList = data.objects);\n  }\n\n  setAssignment(assignment) {\n    this.assignment = assignment;\n    this.setScores(assignment.id);\n  }\n\n  clearAssignment() {\n    this.assignment = false;\n    this.scores = false;\n  }\n\n  // Scores Methods\n  setScores(assignId) {\n    // Filter Object\n    let query = {\n      filters: [{'name': 'assignment_id', 'op': 'eq', 'val': assignId}],\n      order_by: [{'field': 'student__first_name', 'direction': 'asc'}]\n    };\n\n    // Get Data\n    this.api.find('scores', query)\n            .then(data => {\n              this.scores = data.objects;\n              this.ea.publish('scoreUpdate');\n            });\n  }\n\n  // Years Methods\n  setYear(year) {\n    this.year = year;\n\n    // Save year in database\n    this.user.active_year = year.id;\n    this.api.save(this.user);\n\n    // Clear Data of old year\n    this.clearAssignment();\n    this.subjectList = [];\n    this.assignmentList = [];\n  }\n\n  reviveYear(yearId) {\n    this.api.findOne('years', yearId)\n            .then(data => this.year = data);\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\nimport {AuthService} from 'aurelia-auth';\n\n@inject(AuthService)\nexport class HttpService {\n  constructor(auth) {\n    this.http = new HttpClient();\n    this.auth = auth;\n\n    // Confg this http client\n    this.http.configure(config => {\n      config.withBaseUrl('http://localhost:5000/')\n            .withInterceptor({\n              // Parse every response to objects\n              response(message) {\n                return JSON.parse(message.response);\n              }\n            });\n    });\n  }\n\n  send(url, body, withToken = false) {\n    let req = this.http.createRequest(url)\n                       .asPost()\n                       .withContent(body);\n    if (withToken) {\n      req = req.withHeader('Authorization', 'Bearer ' + this.auth.auth.getToken());\n    }\n\n    return req.send();\n  }\n}\n","import {ValidationRules} from 'aurelia-validation';\n\nexport class Assignment {\n  constructor(data) {\n    Object.assign(this, data);\n  }\n\n  get source() {return 'assignments';}\n\n  get isPoints() {return this.type === 'Points';}\n}\n\nValidationRules\n  .ensure('name').displayName('Name')\n    .required()\n    .maxLength(255)\n  .ensure('date').displayName('Date')\n    .required()\n    .satisfiesRule('date')\n  .ensure('type').displayName('Type')\n    .required()\n  .ensure('max').displayName('Max Score')\n    .required()\n  .on(Assignment);\n","import {ValidationRules} from 'aurelia-validation';\n\nexport class Score {\n  constructor(data) {\n    Object.assign(this, data);\n  }\n\n  get source() {return 'scores';}\n}\n\nValidationRules\n  .ensure('value').displayName('Score')\n    .required()\n  .on(Score);\n"],"sourceRoot":".."}